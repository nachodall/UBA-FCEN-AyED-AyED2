#otros observadores, la cola en realidad es pila. y los trabajadores un dict <nombre,ocupado?>
TAD Trabajo es Bool
TAD Cola<Trabajo> {
    obs s: Seq<Trabajo>

    proc vacia(in c: Cola<Trabajo>): bool
        asegura res == true <==> c.s == []

    proc encolar(inout c: Cola<Trabajo>, in e: Trabajo)
        asegura c.s == old(c).s + [e]

    proc desencolar(inout c: Cola<Trabajo>):Trabajo
        requiere c.s != []
        asegura c.s == old(c).s[1..|old(c).s|]
        asegura res == old(c).s[0]
}

TAD TaD{
    obs tecnicos: Conj<Bool> //si es true, esta ocupado
    obs pendientes : Cola<Trabajo>

    proc arrancarLaJornadaLaboral():TaD
        asegura forall i:int :: 0<=i<|res.tecnicos| ==>L a.tecnicos[i] = False 
        asegura res.pendientes.vacia()

    proc nuevoTrabajo(t:Trabajo, inout a:TaD)
        asegura a.pendientes = old(a).pendientes.encolar(t)

    proc enviarTecnico(inout a:TaD)
        requiere !TodosOcupados(a.tecnicos)
        asegura a.pendientes = old(a).pendientes.desencolar()
        asegura 0<=enviado<|a.tecnicos| && old(a).tecnicos[enviado] = false
        asegura a.tecnicos[enviado] = True

    pred tecnicoTermino(inout a:TaD, in tecnico: int)
        requiere 0<=tecnico<|a.tecnicos| && a.tecnicos[tecnico] = True
        asegura a.tecnicos[tecnico] = False
    
    pred todosOcupados(s:Seq<Bool>)
        forall i:int :: 0<=i<|s| ==>L s[i] = True
}
