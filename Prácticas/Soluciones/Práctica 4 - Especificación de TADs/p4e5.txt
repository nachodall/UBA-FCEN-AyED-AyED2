Coord es struct<x: int, y: int>

TAD Robot {
    obs robot = struct<coord: Cord, pasadas: Seq<Seq<Z>>>

    proc arriba(inout r: Robot){
        requiere:{True} //hay restricciones del mapa? (?)
        asegura:{r.robot.coord.y = old(r).robot.coord.y + 1}
    }

    proc abajo(inout r: Robot){
        requiere:{True} //hay restricciones del mapa? (?)
        asegura:{r.robot.coord.y = old(r).robot.coord.y - 1}
        asegura:{r.robot.pasadas[r.robot.coord.x][r.robot.coord.y] += 1}
    }

    proc izquierda(inout r: Robot){
        requiere:{True} //hay restricciones del mapa? (?)
        asegura:{r.robot.coord.y = old(r).robot.coord.x - 1}
        asegura:{r.robot.pasadas[r.robot.coord.x][r.robot.coord.y] += 1}
    }

    proc derecha(inout r: Robot){
        requiere:{True} //hay restricciones del mapa? (?)
        asegura:{r.robot.coord.y = old(r).robot.coord.x + 1}
        asegura:{r.robot.pasadas[r.robot.coord.x][r.robot.coord.y] += 1}
    }

    proc masDerecha(in r: Robot): int{

    }
    proc cuantasVecesPaso(in r: Robot, in c: Coord): int{
        requiere:{True} //cord validas?
        asegura:{res == r.robot.pasadas[c.x][c.y]}
    }
}

